name: Gradle build and test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with:
          java-version: 21
          distribution: 'corretto'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build and test
        run: |
          pushd crime-court-message-processor-service
          chmod +x ./gradlew
          ./gradlew build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Test coverage verification
        run: |
          pushd crime-court-message-processor-service
          chmod +x ./gradlew
          ./gradlew jacocoTestCoverageVerification

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: crime-court-message-processor-service/build/reports/tests
          retention-days: 14

      - name: Upload jacoco coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-coverage-report
          path: crime-court-message-processor-service/build/reports/jacoco/test
          retention-days: 14

  vulnerability-scan-app:
    runs-on: ubuntu-latest
    needs:
      - build-test
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    env:
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      SNYK_TEST_EXCLUDE: build,generated
      SNYK_TARGET_REFERENCE: main
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v5

      - name: Run Snyk to check app for vulnerabilities
        uses: snyk/actions/gradle@master
        continue-on-error: true # To make sure that SARIF upload gets called
        with:
          command: code test
          args: --sarif-file-output=snyk.sarif

      - name: Upload Snyk application scan results to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          #category: application-scan
          sarif_file: snyk.sarif

  vulnerability-scan-docker:
    runs-on: ubuntu-latest
    needs:
      - build-test
    env:
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v5

      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with:
          java-version: 21
          distribution: 'corretto'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build app jar with gradle
        run: |
          pushd crime-court-message-processor-service
          chmod +x ./gradlew
          ./gradlew build

      - name: Build a Docker image
        run: |
          pushd crime-court-message-processor-service
          docker build -t crime-court-message-processor-service:scan .

      - name: Run Snyk to check Docker image for vulnerabilities
        uses: snyk/actions/docker@master
        continue-on-error: true # To make sure that SARIF upload gets called
        with:
          image: crime-court-message-processor-service:scan
          args: --file=crime-court-message-processor-service/Dockerfile --severity-threshold=high --sarif-file-output=snyk.sarif

      - name: Upload Snyk Docker image scan results to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          #category: docker-image-scan
          sarif_file: snyk.sarif
